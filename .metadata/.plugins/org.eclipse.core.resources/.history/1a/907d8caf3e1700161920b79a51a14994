package com.jiuqi.hbswht.member.extAction;

import java.sql.ResultSet;

import com.jiuqi.dna.bap.model.common.define.intf.ActionConst;
import com.jiuqi.dna.bap.model.common.define.intf.IAction;
import com.jiuqi.dna.bap.model.common.runtime.base.BusinessModel;
import com.jiuqi.dna.bap.model.common.runtime.base.MessageDialogWrap;
import com.jiuqi.dna.bap.model.common.type.ModelState;
import com.jiuqi.dna.core.Context;
import com.jiuqi.dna.core.da.DBCommand;
import com.jiuqi.dna.core.da.RecordSet;
import com.jiuqi.dna.core.type.GUID;
import com.jiuqi.hbswht.member.constant.WhtConstant;
import com.jiuqi.dna.ui.wt.widgets.MessageDialog;

public class ExtOpenTargetDetail implements IAction {

	@Override
	public String getGroup() {
		// TODO Auto-generated method stub
		return "湖北省文化厅扩展";
	}

	@Override
	public String getName() {
		// TODO Auto-generated method stub
		return "ExtOpenTargetDetail";
	}

	@Override
	public String getTitle() {
		// TODO Auto-generated method stub
		return "填写目标明细";
	}

	@Override
	public String getDescription() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String getIcon() {
		// TODO Auto-generated method stub
		return ActionConst.ico_selcard;
	}

	@Override
	public String getShortcut() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean isEnabled(BusinessModel model) {
		return (model.getModelState() == ModelState.EDIT)
				|| (model.getModelState() == ModelState.NEW);
	}

	@Override
	public void execute(BusinessModel model, String param) {
		// 获取总体目标子表当前选中的行，判断目标说明是否为空，若为空，则提示，请先输入目标说明
		int curCursor = model.getCursor(WhtConstant.T_ZTMBZB);
		Object mbsm = model.getFieldVisitor().getGridFieldValue(WhtConstant.T_ZTMBZB, WhtConstant.F_ZTMBZB_MBSM,curCursor);
		if (mbsm.toString().trim().equals("")|| mbsm == null){
			MessageDialog.alert("提示信息", "请先输入目标说明！");
			return ;
		}
		String recid = model.getFieldVisitor().getGridFieldValue(WhtConstant.T_ZTMBZB, WhtConstant.F_ZTMBZB_RECID, curCursor).toString();
		// 判断 recid在目标明细主表，MBSMRECID是否存在
		if(findMbsmRecid(recid, model.getContext())){// 存在
			
		}else{
			
		}
	}
	
	private boolean findMbsmRecid(String mbsmrecid,Context context){
		StringBuffer sb = new StringBuffer();
		sb.append(" define query MbsmRecid()")
		.append(" begin ")
		.append(" select mbsmrecid from HBWHT_MBMXZB as t where t.recid = guid '"+mbsmrecid+"'")
		.append(" end");
		DBCommand dbc = null;
		try{
			dbc = context.prepareStatement(sb);
			RecordSet rs = dbc.executeQuery();
			while (rs.next()){
				return true;
			}
		} catch(Exception e){
			e.printStackTrace();
		} finally{
			dbc.unuse();
		}
		return false;
	}
	

}
